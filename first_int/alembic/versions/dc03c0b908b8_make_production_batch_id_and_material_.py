"""Make production_batch_id and material_batch_id non-nullable

Revision ID: dc03c0b908b8
Revises: 
Create Date: 2025-08-08 12:22:44.817326

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'dc03c0b908b8'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_qc_records_id'), table_name='qc_records')
    op.drop_table('qc_records')
    op.alter_column('inventory_items', 'material_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint(op.f('inventory_items_material_id_fkey'), 'inventory_items', type_='foreignkey')
    op.create_foreign_key(None, 'inventory_items', 'raw_materials', ['material_id'], ['id'])
    op.drop_constraint(op.f('production_batches_created_by_fkey'), 'production_batches', type_='foreignkey')
    op.drop_column('production_batches', 'created_by')
    op.alter_column('qc_tests', 'production_batch_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('qc_tests', 'material_batch_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_foreign_key(None, 'qc_tests', 'users', ['performed_by_id'], ['id'])
    op.drop_constraint(op.f('stock_movements_item_id_fkey'), 'stock_movements', type_='foreignkey')
    op.create_foreign_key(None, 'stock_movements', 'inventory_items', ['item_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'stock_movements', type_='foreignkey')
    op.create_foreign_key(op.f('stock_movements_item_id_fkey'), 'stock_movements', 'inventory_items', ['item_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'qc_tests', type_='foreignkey')
    op.alter_column('qc_tests', 'material_batch_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('qc_tests', 'production_batch_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.add_column('production_batches', sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key(op.f('production_batches_created_by_fkey'), 'production_batches', 'users', ['created_by'], ['id'])
    op.drop_constraint(None, 'inventory_items', type_='foreignkey')
    op.create_foreign_key(op.f('inventory_items_material_id_fkey'), 'inventory_items', 'raw_materials', ['material_id'], ['id'], ondelete='CASCADE')
    op.alter_column('inventory_items', 'material_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_table('qc_records',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('qc_records_pkey'))
    )
    op.create_index(op.f('ix_qc_records_id'), 'qc_records', ['id'], unique=False)
    # ### end Alembic commands ###
